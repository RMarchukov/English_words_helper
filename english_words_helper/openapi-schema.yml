openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/topics/{level_name}/:
    get:
      operationId: retrieveSerTopics
      description: ''
      parameters:
      - name: level_name
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerTopics'
          description: ''
      tags:
      - api
  /api/user-words/:
    get:
      operationId: listUserWords
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SerUserWords'
          description: ''
      tags:
      - api
    post:
      operationId: createUserWords
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerUserWords'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerUserWords'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerUserWords'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerUserWords'
          description: ''
      tags:
      - api
  /api/user-words/{id}/:
    get:
      operationId: retrieveUserWords
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user words.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerUserWords'
          description: ''
      tags:
      - api
    put:
      operationId: updateUserWords
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user words.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerUserWords'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerUserWords'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerUserWords'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerUserWords'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUserWords
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user words.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerUserWords'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerUserWords'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerUserWords'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerUserWords'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUserWords
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user words.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/words/:
    get:
      operationId: listWords
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SerWords'
          description: ''
      tags:
      - api
    post:
      operationId: createWords
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerWords'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerWords'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerWords'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerWords'
          description: ''
      tags:
      - api
  /api/words/{id}/:
    get:
      operationId: retrieveWords
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this words.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerWords'
          description: ''
      tags:
      - api
    put:
      operationId: updateWords
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this words.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerWords'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerWords'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerWords'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerWords'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateWords
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this words.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerWords'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerWords'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerWords'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerWords'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyWords
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this words.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/topics/:
    get:
      operationId: listTopics
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SerTopics'
          description: ''
      tags:
      - api
    post:
      operationId: createTopics
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerTopics'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerTopics'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerTopics'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerTopics'
          description: ''
      tags:
      - api
  /api/topics/{id}/:
    get:
      operationId: retrieveTopics
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this topics.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerTopics'
          description: ''
      tags:
      - api
    put:
      operationId: updateTopics
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this topics.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerTopics'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerTopics'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerTopics'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerTopics'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTopics
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this topics.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerTopics'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerTopics'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerTopics'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerTopics'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTopics
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this topics.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/levels/:
    get:
      operationId: listLevels
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SerLevels'
          description: ''
      tags:
      - api
    post:
      operationId: createLevels
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerLevels'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerLevels'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerLevels'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerLevels'
          description: ''
      tags:
      - api
  /api/levels/{id}/:
    get:
      operationId: retrieveLevels
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this levels.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerLevels'
          description: ''
      tags:
      - api
    put:
      operationId: updateLevels
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this levels.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerLevels'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerLevels'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerLevels'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerLevels'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateLevels
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this levels.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerLevels'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerLevels'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerLevels'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerLevels'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyLevels
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this levels.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/verbs/:
    get:
      operationId: listIrregularVerbs
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SerIrregularVerbs'
          description: ''
      tags:
      - api
    post:
      operationId: createIrregularVerbs
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerIrregularVerbs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerIrregularVerbs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerIrregularVerbs'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerIrregularVerbs'
          description: ''
      tags:
      - api
  /api/verbs/{id}/:
    get:
      operationId: retrieveIrregularVerbs
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this irregular verbs.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerIrregularVerbs'
          description: ''
      tags:
      - api
    put:
      operationId: updateIrregularVerbs
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this irregular verbs.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerIrregularVerbs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerIrregularVerbs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerIrregularVerbs'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerIrregularVerbs'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateIrregularVerbs
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this irregular verbs.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerIrregularVerbs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SerIrregularVerbs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SerIrregularVerbs'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerIrregularVerbs'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyIrregularVerbs
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this irregular verbs.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/words/level/{level_name}/:
    get:
      operationId: retrieveSerWords
      description: ''
      parameters:
      - name: level_name
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerWords'
          description: ''
      tags:
      - api
  /api/words/topic/{topic_name}/:
    get:
      operationId: retrieveSerWords
      description: ''
      parameters:
      - name: topic_name
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerWords'
          description: ''
      tags:
      - api
  /api/auth/users/:
    get:
      operationId: listUsers
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/auth/users/me/:
    get:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/auth/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/auth/users/activation/:
    post:
      operationId: activationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - api
  /api/auth/users/resend_activation/:
    post:
      operationId: resendActivationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/auth/users/reset_password/:
    post:
      operationId: resetPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/auth/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/auth/users/reset_username/:
    post:
      operationId: resetUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/auth/users/reset_username_confirm/:
    post:
      operationId: resetUsernameConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - api
  /api/auth/users/set_password/:
    post:
      operationId: setPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - api
  /api/auth/users/set_username/:
    post:
      operationId: setUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - api
  /api/auth-tok/token/login/:
    post:
      operationId: createTokenCreate
      description: Use this endpoint to obtain user authentication token.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
      tags:
      - api
  /api/auth-tok/token/logout/:
    post:
      operationId: createTokenDestroy
      description: Use this endpoint to logout user (remove user authentication token).
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/token/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - api
components:
  schemas:
    SerTopics:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        level:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 64
    SerUserWords:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        english_word:
          type: string
          maxLength: 64
        ukraine_word:
          type: string
          maxLength: 64
      required:
      - english_word
      - ukraine_word
    SerWords:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        level:
          type: string
          readOnly: true
        topic:
          type: string
          readOnly: true
        in_english:
          type: string
          maxLength: 64
        in_ukrainian:
          type: string
          maxLength: 64
        topic_id:
          type: integer
          writeOnly: true
      required:
      - in_english
      - in_ukrainian
      - topic_id
    SerLevels:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 10
    SerIrregularVerbs:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_form:
          type: string
          maxLength: 64
        second_form:
          type: string
          maxLength: 64
        third_form:
          type: string
          maxLength: 64
        translate:
          type: string
          maxLength: 64
      required:
      - first_form
      - second_form
      - third_form
      - translate
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
      required:
      - new_username
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
      required:
      - current_password
      - new_username
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
